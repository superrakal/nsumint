{
  "name": "ember-cli-cookie",
  "version": "0.1.0",
  "description": "Wrap $.cookie in Ember goodness",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "postinstall": "bower install"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/achambers/ember-cli-cookie.git"
  },
  "keywords": [
    "ember-addon"
  ],
  "author": {
    "name": "Aaron Chambers"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/achambers/ember-cli-cookie/issues"
  },
  "homepage": "https://github.com/achambers/ember-cli-cookie",
  "dependencies": {
    "bower": "^1.3.9"
  },
  "readme": "# ember-cli-cookie\n\n> Wrap $.cookie in Ember goodness\n\n## Motivation\n\nTo try and remove external dependencies from my [Ember CLI][1] apps with a Promise aware object wrapper.\n\n## Synopsis\n\nThis addon is designed to help pushing the external dependencies of cookies as far from my [Ember CLI][1] app as possible.\nBy injecting this object where cookie access is needed, my Ember code can just deal with an Ember object.  This also\nmeans that I can inject mock objects in during tests to simulate setting and getting cookies.\n\n## Installation\n\nFrom within your [Ember CLI][1] application, run:\n\n```shell\nnpm install --save-dev ember-cli-cookie\n```\n\n## Usage\n\nIn an initializer, inject the `cookie` object where needed:\n\n```javascript\nexport default {\n  name: 'test-initializer',\n  after: ['cookie'],\n\n  initialize: function(container, app) {\n    app.inject('controller', 'cookie', 'cookie:main');\n  }\n}\n```\n\n### \\#set(key, value)\n\nUse this function to set a cookie, eg:\n\n```javascript\n// /controllers/test.js\n\nexport default Ember.Controller.extend({\n  actions: {\n    testAction: function() {\n      var self   = this;\n      var cookie = this.get('cookie');\n\n      cookie.setCookie('my-key', 'my-value')\n        .then(function() {\n          self.transitionToRoute('success');\n        });\n    }\n  }\n});\n```\n\n### \\#get(key)\n\nUse this function to get a cookie, eg:\n\n```javascript\n// /controllers/test.js\n\nexport default Ember.Controller.extend({\n  actions: {\n    testAction: function() {\n      var self   = this;\n      var cookie = this.get('cookie');\n      var token  = cookie.getCookie('my-key');\n\n      if (!token) {\n        this.transitionTo('login');\n      }\n    }\n  }\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality.\n\n## Maintainers\n\n- Aaron Chambers (achambers@gmail.com)\n\n[1]: http://ember-cli.com \"Ember CLI\"\n",
  "readmeFilename": "README.md",
  "_id": "ember-cli-cookie@0.1.0",
  "dist": {
    "shasum": "51436820fe2369061d3df00224612828ab4639f2"
  },
  "_from": "ember-cli-cookie@",
  "_resolved": "https://registry.npmjs.org/ember-cli-cookie/-/ember-cli-cookie-0.1.0.tgz"
}

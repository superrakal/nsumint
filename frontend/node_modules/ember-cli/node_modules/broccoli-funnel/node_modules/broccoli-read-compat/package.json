{
  "name": "broccoli-read-compat",
  "version": "0.1.3",
  "description": "Use Broccoli's new .rebuild API and still support the legacy .read interface.",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rwjblue/broccoli-read-compat.git"
  },
  "keywords": [
    "broccoli"
  ],
  "author": "",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/rwjblue/broccoli-read-compat/issues"
  },
  "homepage": "https://github.com/rwjblue/broccoli-read-compat",
  "dependencies": {
    "promise-map-series": "^0.2.1",
    "quick-temp": "^0.1.2",
    "rimraf": "^2.2.8",
    "rsvp": "^3.0.18"
  },
  "readme": "# broccoli-read-compat\n\nThis packages allows you to use Broccoli's new `.rebuild` API and still\nsupport the legacy `.read` interface required for older Broccoli versions.\n\n## Usage\n\nWhen defining your plugin, call `readAPICompat.wrapFactory` to add the legacy\n`.read` and `.cleanup` functions.\n\n```javascript\nvar fs = require('fs');\nvar readAPICompat = require('broccoli-read-compat');\n\nfunction MyAwesomePlugin() { }\n\nMyAwesomePlugin.prototype.rebuild = function() {\n  var outputPath = this.outputPath;\n\n  fs.writeFileSync(outputPath + '/' + 'awesome.txt', 'special sauce');\n};\n\nreadAPICompat.wrapFactory(MyAwesomePlugin);\n```\n\n",
  "readmeFilename": "README.md",
  "_id": "broccoli-read-compat@0.1.3",
  "_from": "broccoli-read-compat@>=0.1.2 <0.2.0"
}

{
  "name": "ember-cli-dependency-checker",
  "version": "1.0.1",
  "description": "Ember CLI addon for detecting missing npm and bower dependencies before executing ember commands",
  "directories": {
    "doc": "doc",
    "test": "tests"
  },
  "scripts": {
    "start": "ember server",
    "build": "ember build",
    "test": "node tests/runner",
    "test:debug": "node debug tests/runner"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/quaertym/ember-cli-dependency-checker.git"
  },
  "bugs": {
    "url": "https://github.com/quaertym/ember-cli-dependency-checker/issues"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "author": {
    "name": "Emre Unal"
  },
  "license": "MIT",
  "readmeFile": "README.md",
  "devDependencies": {
    "broccoli-asset-rev": "^2.0.2",
    "chai": "^1.9.2",
    "ember-cli": "0.2.3",
    "ember-cli-app-version": "0.3.3",
    "ember-cli-content-security-policy": "0.4.0",
    "ember-cli-dependency-checker": "0.0.8",
    "ember-cli-htmlbars": "0.7.4",
    "ember-cli-ic-ajax": "0.1.1",
    "ember-cli-inject-live-reload": "^1.3.0",
    "ember-cli-qunit": "0.3.10",
    "ember-cli-uglify": "1.0.1",
    "ember-data": "1.0.0-beta.16.1",
    "ember-export-application-global": "^1.0.2",
    "ember-disable-prototype-extensions": "^1.0.0",
    "glob": "^5.0.5",
    "mocha": "^2.0.1",
    "mocha-jshint": "0.0.9"
  },
  "keywords": [
    "ember-addon",
    "ember-cli",
    "ember",
    "node",
    "npm",
    "bower",
    "dependency",
    "check"
  ],
  "dependencies": {
    "chalk": "^0.5.1",
    "is-git-url": "^0.2.0",
    "semver": "^4.1.0",
    "ember-cli-babel": "^5.0.0"
  },
  "readme": "ember-cli-dependency-checker [![Build Status](https://travis-ci.org/quaertym/ember-cli-dependency-checker.svg?branch=master)](https://travis-ci.org/quaertym/ember-cli-dependency-checker)\n============================\n\nAn Ember CLI addon that checks for missing npm and bower dependencies before running ember commands.\n\n### Installation\n\nIn your Ember CLI app (>= v1.2.0) run the following:\n\n```bash\nnpm install --save-dev ember-cli-dependency-checker\n```\n\n### Usage\n\nUpon being included in a project (when running `ember build` for example), the dependency checker\nwill confirm versions according to several signals of intent:\n\n* `bower.json` will be compared to the contents of `bower_components` (or your Ember-CLI\n  configured bower directory)\n* `package.json` will be compared to the contents of `node_modules`. This check only\n  takes the top-level of dependencies into account. Nested dependencies are not confirmed.\n* `npm-shrinkwrap.json`, if present, will be compared to the contents of `node_modules`. This\n  is done only if a `package.json` check does not find any unsatisfied dependencies. Nested\n  dependencies are confirmed.\n\n### Shrinkwrap Workflow\n\n**This workflow presumes npm v2.7.6 - v3.0.0**, though it may work well for earlier versions.\n\nWhen installing dependencies, it is important that `npm shrinkwrap --dev` is run and the resulting\n`npm-shrinkwrap.json` file committed. For example, to install the [Torii](https://github.com/Vestorly/torii)\nlibrary:\n\n```\nnpm install --save-dev torii\nnpm shrinkwrap --dev\ngit add package.json npm-shrinkwrap.json\ngit commit -m\"Install Torii\"\n```\n\n**If the npm-shrinkwrap.json file is not committed, nested dependencies cannot be confirmed**.\nRemembering to execute `npm shrinkwrap --dev` and commit `npm-shrinkwrap.json` is akin to committing\nthe `Gemfile.lock` file when using Ruby's Bundler library.\n\nIf `ember` is run and the contents of `node_modules/` differs from the contents of `package.json`\nand `npm-shrinkwrap.json` an error will be raised. To resolve a difference in dependencies,\nyou must destroy the `node_modules/` directory and re-run `npm install`. With a blank\ndirectory, `npm install` will respect the versions pinned in `npm-shrinkwrap.json`.\n\nIn some rare cases there may be un-resolvable conflicts between installable versions of\ndependencies and those pinned. Upgrading packages after deleting the `npm-shrinkwrap.json`\nfile or changing the version of a dependency requested in `package.json` may be the only\nway to resolve theses cases.\n\n### Deployment with Shrinkwrap\n\nEmber-CLI projects may be built on Travis or another dedicated build tool like Jenkins. To\nensure that versions of dependencies (including of nested dependencies) are the same during\nbuilds as they are on the authoring developer's computer, it is recommended\nthat you confirm dependencies before a build. Do this by running `ember version` to\nbegin a dependency check, then if needed clearing the `node_modules/` and `bower_components/` folder\nand installing dependencies. For example:\n\n```\nember version || (rm -rf node_modules/ bower_components/ && npm install && bower install)\nember build -e production\n```\n\n### Caveats\n\nDue to the limited information available in configuration files and packages, git\ndependencies may fall out of sync. Using shrinkwrap will confirm that they are correct\nupon installation, but they cannot be confirmed at runtime until improvements are\nmade to the `npm-shrinkwrap.json` file.\n\nPinning solely to versioned releases should be preferred.\n\n### Tests\n\nTo run tests:\n\n`npm test`\n\n### LICENSE\n\nMIT\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/quaertym/ember-cli-dependency-checker#readme",
  "_id": "ember-cli-dependency-checker@1.0.1",
  "_from": "ember-cli-dependency-checker@>=1.0.0 <2.0.0"
}

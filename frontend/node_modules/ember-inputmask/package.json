{
  "name": "ember-inputmask",
  "version": "0.1.4",
  "description": "Ember wrapper for the jquery.inputmask plugin",
  "directories": {
    "doc": "doc",
    "test": "tests"
  },
  "scripts": {
    "start": "ember server",
    "build": "ember build",
    "test": "ember test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/pzuraq/ember-inputmask"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "author": {
    "name": "Chris Garrett"
  },
  "license": "MIT",
  "devDependencies": {
    "broccoli-asset-rev": "^2.0.0",
    "broccoli-ember-hbs-template-compiler": "^1.6.1",
    "broccoli-merge-trees": "^0.2.1",
    "broccoli-static-compiler": "^0.2.1",
    "ember-cli": "0.1.5",
    "ember-cli-content-security-policy": "0.3.0",
    "ember-cli-dependency-checker": "0.0.7",
    "ember-cli-esnext": "0.1.1",
    "ember-cli-ic-ajax": "0.1.1",
    "ember-cli-inject-live-reload": "^1.3.0",
    "ember-cli-qunit": "0.1.2",
    "ember-data": "1.0.0-beta.12",
    "ember-export-application-global": "^1.0.0",
    "express": "^4.8.5",
    "glob": "^4.0.5"
  },
  "keywords": [
    "ember-addon"
  ],
  "ember-addon": {
    "configPath": "tests/dummy/config"
  },
  "readme": "# Ember-inputmask\n\nThis addon provides an general use input masking component using the\n[jquery.inputmask](https://github.com/RobinHerbots/jquery.inputmask) plugin,\nalong with a set of commonly used masks including\n\n* Credit card inputs\n* Currency inputs\n* Date inputs\n* Email inputs\n* Number inputs\n* Phone number inputs\n* Zip code inputs\n\n## Installation\n\n```\n$ npm install ember-inputmask --save-dev\n$ ember g ember-inputmask\n```\n\n## Usage\n\nThe standard `input-mask` component:\n\n```\n{{input-mask mask=\"999-aaa-***\" value=foo unmaskedValue=bar}}\n```\n\n### Default masking definitions\n\n* 9 : numeric\n* a : alphabetical\n* \\* : alphanumeric\n* A : automatically uppercased alphabetical \n* \\# : unicode\n\nOptional portions of masks are delimited with brackets `[]`:\n\n```\n// Optionally lets the user add the last dash and characters\n{{input-mask mask=\"999-aaa[-***]\" value=foo unmaskedValue=bar}}\n```\n\n### Unmasked Value\n\nThe mask is applied directly to the input itself, meaning it alters the `value` \nattribute. `unmaskedValue` There are times when you might want the value with \nthe mask, and times when you might want the value without the mask. For example:\n\n```\n{{input-mask mask=\"99/99/9999\" value=foo unmaskedValue=bar}}\n```\n\nThis is an adhoc mask for a date (consider using the `date-input` component \ninstead). If the user were to enter 12/12/2014, the value of `foo` would be just \nthat, whereas the value of `bar` would be `12122014`, which may not be as useful \nto you. Either way, both values are accessible and bound to each other, so \nchoose whichever one you want.\n\n### Options\n\n#### showMaskOnFocus (default: true)\n\nShows the user a preview of the mask when the field is focussed\n\n#### showMaskOnHover (default: true)\n\nShows the user a preview of the mask when the field is hovered\n\n#### rightAlign (default: false)\n\nThis is an option on the original plugin, but I highly recommend using css \nclasses because all it does is apply a style directly to the input.\n\n#### clearIncomplete (default: false)\n\nIf the user does not completely fill in the mask before defocus, it will clear\nthe input.\n\n#### greedyMask (default: false)\n\nIf there are any optional portions of the mask this decides whether or not to\ndisplay them in the preview.\n\n\n\n## Other Components\n\nAs mentioned above, this addon include other components that extend the base\n`input-mask` component. Some of simple aliases, but some add additional options.\n\n\n\n### Credit Card Inputs\n\n```\n{{credit-card-input unmaskedValue=foo cardType=bar separator=\" \"}} \n```\n\nThe `credit-card-input` dynamically determines the type of the credit card and\nchanges the mask as appropriate. It currently has support for:\n\n* Visa\n* MasterCard\n* Amex\n* Diners Club\n* Discover\n* JCB\n\nThe card type is stored in `cardType`, which can be bound to. The separator for\nnumbers can be specified with the `separator` option, and defaults to `-`.\n\n\n\n### Currency Inputs\n\n```\n{{currency-input unmaskedValue=foo}} \n```\n\nThis is just a wrapper for the jquery.inputmask alias and is equivalent to the \nfollowing:\n\n```\n{{input-mask mask=\"currency\" unmaskedValue=foo}}\n```\n\n\n\n### Date Inputs\n\n```\n{{date-input unmaskedValue=foo}} \n```\n\nThis is just a wrapper for the jquery.inputmask alias and is equivalent to the \nfollowing:\n\n```\n{{input-mask mask=\"date\" unmaskedValue=foo}}\n```\n\n\n\n### Email Inputs\n\n```\n{{email-input unmaskedValue=foo}} \n```\n\nThis is just a wrapper for the jquery.inputmask alias and is equivalent to the \nfollowing:\n\n```\n{{input-mask mask=\"email\" unmaskedValue=foo}}\n```\n\n\n\n### Number Inputs\n\n```\n{{number-input unmaskedValue=foo group=false groupSize=3 separator=\",\" decimal=false radix=\".\"}} \n```\n\nNumber inputs only accept numbers, and can be formatted using the following \noptions:\n\n* **group:** Display the number grouped for readability i.e. 1,234 vs. 1234\n* **groupSize:** Change the size of the groups\n* **separator:** Change the group separator (caveat: if radix and separator are\n  the same, then the radix will default to '.')\n* **decimal:** If set to `true` then the input will be given 2 decimal places, \n  if set some number then the input will be given that many decimal places\n* **radix:** Sets the radix that separates the decimal places\n\n\n\n### Phone Number Inputs\n\n```\n{{phone-number-input unmaskedValue=foo extensions=false}} \n```\n\nMasks a phone number with the format `(999) 999-9999`. The `extensions` option\ncan be set to true to allow up to 4 digit extensions `(999) 999-9999 x 9999`.\nNote that if `greedyMask` is set to `false`, which is the default, then you have\nto press space or 'x' to activate the extension part of the mask when entering.\n\nNOTE: There is a \"phone\" alias included in the jquery.inputmask plugin, but when\nI tried using it, I encountered slowness and freezeups. It is much more general\nthan this tag, however.\n\n\n\n### Zip Code Inputs\n\n```\n{{zip-code-input unmaskedValue=foo fullCode=false}} \n```\n\nMasks a zip code. If `fullCode` is set to true, then it will enable the user\nto enter the full ZIP+4 code.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/pzuraq/ember-inputmask/issues"
  },
  "_id": "ember-inputmask@0.1.4",
  "_from": "ember-inputmask@^0.1.4"
}

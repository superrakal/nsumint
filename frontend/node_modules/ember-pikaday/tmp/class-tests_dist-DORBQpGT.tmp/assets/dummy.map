{"version":3,"sources":["dummy/app.js","dummy/components/pikaday-input.js","dummy/ember-pikaday/tests/ember-pikaday/components/pikaday-input.jshint.js","dummy/ember-pikaday/tests/ember-pikaday/helpers/pikaday.jshint.js","dummy/initializers/app-version.js","dummy/initializers/export-application-global.js","dummy/initializers/setup-pikaday-i18n.js","dummy/router.js","dummy/templates/application.js","dummy/tests/app.jshint.js","dummy/tests/helpers/resolver.js","dummy/tests/helpers/resolver.jshint.js","dummy/tests/helpers/start-app.js","dummy/tests/helpers/start-app.jshint.js","dummy/tests/initializers/setup-pikaday-i18n.jshint.js","dummy/tests/router.jshint.js","dummy/tests/test-helper.js","dummy/tests/test-helper.jshint.js","dummy/tests/unit/components/pikaday-input-test.js","dummy/tests/unit/components/pikaday-input-test.jshint.js","vendor/ember-cli/app-suffix.js"],"sourcesContent":["define('dummy/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'dummy/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  var App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('dummy/components/pikaday-input', ['exports', 'ember', 'ember-pikaday/components/pikaday-input'], function (exports, Ember, PikadayInputComponent) {\n\n\t'use strict';\n\n\texports['default'] = PikadayInputComponent['default'];\n\n});","define('dummy/ember-pikaday/tests/ember-pikaday/components/pikaday-input.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - ember-pikaday/components\");\n  test(\"ember-pikaday/components/pikaday-input.js should pass jshint\", function () {\n    ok(true, \"ember-pikaday/components/pikaday-input.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-pikaday/tests/ember-pikaday/helpers/pikaday.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - ember-pikaday/helpers\");\n  test(\"ember-pikaday/helpers/pikaday.js should pass jshint\", function () {\n    ok(true, \"ember-pikaday/helpers/pikaday.js should pass jshint.\");\n  });\n\n});","define('dummy/initializers/app-version', ['exports', 'dummy/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n\n  exports['default'] = {\n    name: \"App Version\",\n    initialize: function (container, application) {\n      var appName = classify(application.toString());\n      Ember['default'].libraries.register(appName, config['default'].APP.version);\n    }\n  };\n\n});","define('dummy/initializers/export-application-global', ['exports', 'ember', 'dummy/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal) {\n      window[classifiedName] = application;\n    }\n  };\n\n  exports['default'] = {\n    name: \"export-application-global\",\n\n    initialize: initialize\n  };\n\n});","define('dummy/initializers/setup-pikaday-i18n', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  /* globals moment */\n\n  exports['default'] = {\n    name: \"setup-pikaday-i18n\",\n    initialize: function (container, application) {\n      var i18n = Ember['default'].Object.extend({\n        previousMonth: \"Vorheriger Monat\",\n        nextMonth: \"NÃ¤chster Monat\",\n        months: moment.localeData()._months,\n        weekdays: moment.localeData()._weekdays,\n        weekdaysShort: moment.localeData()._weekdaysShort\n      });\n\n      container.register(\"pikaday-i18n:main\", i18n, { singleton: true });\n      application.inject(\"component:pikaday-input\", \"i18n\", \"pikaday-i18n:main\");\n    }\n  };\n\n});","define('dummy/router', ['exports', 'ember', 'dummy/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {});\n\n  exports['default'] = Router;\n\n});","define('dummy/templates/application', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n    data.buffer.push(\"<h2 id='title'>Welcome to Ember.js</h2>\\n\\n\");\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    data.buffer.push(escapeExpression((helper = helpers['pikaday-input'] || (depth0 && depth0['pikaday-input']),options={hash:{\n      'format': (\"dddd MMMM Do YYYY, h:mm:ss a\")\n    },hashTypes:{'format': \"STRING\"},hashContexts:{'format': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"pikaday-input\", options))));\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('dummy/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/helpers/resolver', ['exports', 'ember/resolver', 'dummy/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('dummy/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/helpers/start-app', ['exports', 'ember', 'dummy/app', 'dummy/router', 'dummy/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('dummy/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/initializers/setup-pikaday-i18n.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - initializers');\n  test('initializers/setup-pikaday-i18n.js should pass jshint', function() { \n    ok(true, 'initializers/setup-pikaday-i18n.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/test-helper', ['dummy/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('dummy/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/pikaday-input-test', ['ember-qunit', 'ember', 'ember-pikaday/helpers/pikaday'], function (ember_qunit, Ember, pikaday) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent(\"pikaday-input\", \"PikadayInputComponent\");\n\n  ember_qunit.test(\"is an input tag\", function (assert) {\n    assert.equal(\"INPUT\", this.$().prop(\"tagName\"));\n  });\n\n  ember_qunit.test(\"the input tag has the readonly attribute if it has been set on the component\", function (assert) {\n    var component = this.subject();\n    component.set(\"readonly\", true);\n\n    assert.ok(this.$().is(\"[readonly]\"));\n  });\n\n  ember_qunit.test(\"clicking the input opens the pikaday dialog\", function (assert) {\n    var $input = this.render();\n\n    assert.ok($(\".pika-single\").hasClass(\"is-hidden\"));\n    pikaday.openDatepicker($input);\n    assert.ok(!$(\".pika-single\").hasClass(\"is-hidden\"));\n  });\n\n  ember_qunit.test(\"selecting a date should update the value attribute\", function (assert) {\n    var component = this.subject();\n    var $input = this.render();\n    var interactor = pikaday.openDatepicker($input);\n\n    interactor.selectDate(new Date(2013, 3, 28));\n\n    var date = this.subject().get(\"value\");\n\n    assert.equal(date.getFullYear(), 2013);\n    assert.equal(date.getMonth(), 3);\n    assert.equal(date.getDate(), 28);\n  });\n\n  ember_qunit.test(\"setting the value attribute should select the correct date\", function (assert) {\n    var $input = this.render();\n\n    this.subject().set(\"value\", new Date(2010, 7, 10));\n    var interactor = pikaday.openDatepicker($input);\n\n    assert.equal(interactor.selectedYear(), 2010);\n    assert.equal(interactor.selectedMonth(), 7);\n    assert.equal(interactor.selectedDay(), 10);\n  });\n\n  ember_qunit.test(\"DD.MM.YYYY should be the default format for the input\", function (assert) {\n    var $input = this.render();\n    this.subject().set(\"value\", new Date(2010, 7, 10));\n\n    assert.equal($input.val(), \"10.08.2010\");\n  });\n\n  ember_qunit.test(\"format of the input is changeable\", function (assert) {\n    this.subject().set(\"format\", \"YYYY.DD.MM\");\n    var $input = this.render();\n    this.subject().set(\"value\", new Date(2010, 7, 10));\n\n    assert.equal($input.val(), \"2010.10.08\");\n  });\n\n  ember_qunit.test(\"default i18n configuration of Pikaday can be changed\", function (assert) {\n    var component = this.subject({\n      i18n: {\n        previousMonth: \"Vorheriger Monat\",\n        nextMonth: \"NÃ¤chster Monat\",\n        months: [\"Januar\", \"Februar\", \"MÃ¤rz\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"],\n        weekdays: [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"],\n        weekdaysShort: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"]\n      }\n    });\n\n    var $input = this.render();\n\n    component.set(\"value\", new Date(2014, 2, 10));\n    pikaday.openDatepicker($input);\n\n    assert.equal($(\".pika-select-month option:selected\").text(), \"MÃ¤rz\");\n  });\n\n});","define('dummy/tests/unit/components/pikaday-input-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/pikaday-input-test.js should pass jshint', function() { \n    ok(true, 'unit/components/pikaday-input-test.js should pass jshint.'); \n  });\n\n});","/* jshint ignore:start */\n\ndefine('dummy/config/environment', ['ember'], function(Ember) {\n  var prefix = 'dummy';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"dummy/tests/test-helper\");\n} else {\n  require(\"dummy/app\")[\"default\"].create({\"LOG_ACTIVE_GENERATION\":false,\"LOG_VIEW_LOOKUPS\":false,\"rootElement\":\"#ember-testing\",\"name\":\"ember-pikaday\",\"version\":\"0.0.0.a54f915f\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"dummy.js"}
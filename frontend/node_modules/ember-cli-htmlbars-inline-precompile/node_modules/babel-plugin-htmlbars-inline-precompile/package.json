{
  "name": "babel-plugin-htmlbars-inline-precompile",
  "version": "0.0.4",
  "description": "Babel plugin to replace tagged template strings with precompiled HTMLBars templates",
  "scripts": {
    "test": "mocha tests"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pangratz/babel-plugin-htmlbars-inline-precompile.git"
  },
  "author": {
    "name": "Clemens MÃ¼ller",
    "email": "cmueller.418@gmail.com"
  },
  "license": "MIT",
  "devDependencies": {
    "babel-core": "^5.2.10",
    "mocha": "^2.2.4"
  },
  "gitHead": "d2e05d1ea59ac8bf44bb7e1ede420118792934e5",
  "bugs": {
    "url": "https://github.com/pangratz/babel-plugin-htmlbars-inline-precompile/issues"
  },
  "homepage": "https://github.com/pangratz/babel-plugin-htmlbars-inline-precompile#readme",
  "_id": "babel-plugin-htmlbars-inline-precompile@0.0.4",
  "_shasum": "ef5c0ce0a06a161e5364307450a28d09004c3da2",
  "_from": "babel-plugin-htmlbars-inline-precompile@0.0.4",
  "_npmVersion": "2.11.2",
  "_nodeVersion": "0.12.5",
  "_npmUser": {
    "name": "pangratz",
    "email": "cmueller.418@gmail.com"
  },
  "dist": {
    "shasum": "ef5c0ce0a06a161e5364307450a28d09004c3da2",
    "tarball": "http://registry.npmjs.org/babel-plugin-htmlbars-inline-precompile/-/babel-plugin-htmlbars-inline-precompile-0.0.4.tgz"
  },
  "maintainers": [
    {
      "name": "pangratz",
      "email": "cmueller.418@gmail.com"
    }
  ],
  "directories": {},
  "_resolved": "https://registry.npmjs.org/babel-plugin-htmlbars-inline-precompile/-/babel-plugin-htmlbars-inline-precompile-0.0.4.tgz",
  "readme": "# babel-plugin-htmlbars-inline-precompile [![Build Status](https://travis-ci.org/pangratz/babel-plugin-htmlbars-inline-precompile.svg?branch=master)](https://travis-ci.org/pangratz/babel-plugin-htmlbars-inline-precompile)\n\nBabel plugin to replace ES6 tagged template strings with the `HTMLBars.precompile`d version of it:\n\n``` js\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule(\"my view\");\n\ntest(\"inline templates ftw\", function(assert) {\n  var view = Ember.View.create({\n    greeting: \"inline template world\",\n    template: hbs`\n      <span>hello {{view.greeting}}</span>\n    `\n  });\n\n  view.appendTo('#testing');\n\n  assert.equal(view.$().html().trim(), \"<span>hello inline template world</span>\");\n});\n```\n\nresults in\n\n``` js\nmodule(\"my view\");\n\ntest(\"inline templates ftw\", function(assert) {\n  var view = Ember.View.create({\n    greeting: \"inline template world\",\n    template: Ember.HTMLBars.template(function() {\n      /* crazy HTMLBars template function stuff */\n    })\n  });\n\n  view.appendTo('#testing');\n\n  assert.equal(view.$().html().trim(), \"<span>hello inline template world</span>\");\n});\n```\n\n## Usage\n\n``` js\nvar HTMLBarsCompiler = require('./bower_components/ember/ember-template-compiler');\nvar HTMLBarsInlinePrecompile = require('babel-plugin-htmlbars-inline-precompile');\n\nvar pluginConfiguredWithCompiler = HTMLBarsInlinePrecompile(HTMLBarsCompiler.precompile);\n\nrequire('babel').transform(\"code\", {\n  plugins: [ pluginConfiguredWithCompiler ]\n});\n```\n",
  "readmeFilename": "README.md"
}
